class Solution {
    public int find(int[] nums,int low,int high){
        int i=low;
        int j=high;
        int pivot=nums[low];
        while(i<j){
            while(nums[i]<=pivot && i<=high-1){
                i++;
            }
            while(nums[j]>=pivot && j>=low+1){
                j--;
            }
            if(i<j){
                int temp=nums[i];
                nums[i]=nums[j];
                nums[j]=temp;
            }
        }
         int temp = nums[low];
        nums[low] = nums[j];
        nums[j] = temp;
        return j;
    }
    public void qs(int[] nums,int low,int high){
        if(low<high){
            int partition=find(nums,low,high);
            qs(nums,low,partition-1);
            qs(nums,partition+1,high);
        }
    }
    public int[] quickSort(int[] nums) {
        int n=nums.length;
           qs(nums,0,n-1);
           return nums;
    }
}
